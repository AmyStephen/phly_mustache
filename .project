mustache=/home/matthew/git/phly_mustache CD=. filter="*.php *.html *.xml *.txt" {
 LICENSE
 README.txt
 TODO
 library=library {
  Phly=Phly {
   Mustache=Mustache {
    Exception.php
    Lexer.php
    Mustache.php
    Pragma.php
    Renderer.php
    TemplateNotFoundException.php
    Exception=Exception {
     InvalidDelimiterException.php
     InvalidEscaperException.php
     InvalidPartialsException.php
     InvalidPragmaNameException.php
     InvalidStateException.php
     InvalidTemplateException.php
     InvalidTemplatePathException.php
     InvalidVariableNameException.php
     UnbalancedSectionException.php
     UnbalancedTagException.php
     UnregisteredPragmaException.php
    }
    Pragma=Pragma {
     AbstractPragma.php
     ImplicitIterator.php
    }
   }
  }
 }
 tests=tests {
  bootstrap.php
  phpunit.xml
  PhlyTest=PhlyTest {
   Mustache=Mustache {
    MustacheTest.php
    TestAsset=TestAsset {
     NestedObject.php
     PartialView.php
     ViewWithArrayEnumerable.php
     ViewWithHigherOrderSection.php
     ViewWithMethod.php
     ViewWithNestedObjects.php
     ViewWithObjectForPartial.php
     ViewWithTraversableObject.php
    }
    templates=templates filter="*.mustache" {
     crazy_recursive.mustache
     node.mustache
     partial-template.mustache
     partial-with-section.mustache
     renders-file-templates.mustache
     template-with-aliased-partial.mustache
     template-with-comments.mustache
     template-with-conditional.mustache
     template-with-delim-set-in-section.mustache
     template-with-delim-set.mustache
     template-with-dereferencing.mustache
     template-with-enumerable.mustache
     template-with-implicit-iterator.mustache
     template-with-inverted-section.mustache
     template-with-method-substitution.mustache
     template-with-partial.mustache
     template-with-partials-and-delim-set.mustache
     template-with-pragma-in-section.mustache
     template-with-pragma-and-partial.mustache
     template-with-sections-and-delim-set.mustache
    }
   }
  }
 }
}
